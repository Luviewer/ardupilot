# hw definition file for processing by chibios_hwdef.py for CUAV-X7

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

# board ID for firmware load
APJ_BOARD_ID 1010

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 5

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# order of UARTs (and USB)
SERIAL_ORDER OTG1 UART7 UART4 USART3 UART8 USART1 UART5 

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9  VBUS INPUT

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# UART7 is telem
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# UART4 GPS MB1
PA1 UART4_RX UART4 
PA0 UART4_TX UART4 

# UART4 GPS MB2
PD9 USART3_RX USART3
PD8 USART3_TX USART3

# UART8 
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# UART1
PB15 USART1_RX USART1
PB14 USART1_TX USART1

# UART5
PB12 UART5_RX UART5
PB13 UART5_TX UART5

# PWM channels
PD12  TIM4_CH1  TIM4  PWM(1)  GPIO(50)
PD13  TIM4_CH2  TIM4  PWM(2)  GPIO(51)
PD14  TIM4_CH3  TIM4  PWM(3)  GPIO(52)
PD15  TIM4_CH4  TIM4  PWM(4)  GPIO(53)
PB1   TIM3_CH4  TIM3  PWM(5)  GPIO(54)
PB0   TIM3_CH3  TIM3  PWM(6)  GPIO(55)
PC6   TIM3_CH1  TIM3  PWM(7)  GPIO(56)
PC7   TIM3_CH2  TIM3  PWM(8)  GPIO(57)

# AUX channels
PE14  TIM1_CH4  TIM1  PWM(9)  GPIO(58)
PE9   TIM1_CH1  TIM1  PWM(10) GPIO(59)

# NeoPixels
PE13  TIM1_CH3  TIM1  PWM(11) GPIO(60)

# ALARM
PA3   TIM15_CH2 TIM15 GPIO(61) ALARM

# RC input
PB11 TIM2_CH4 TIM2 RCININT PULLUP LOW 

# BATT
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

define HAL_BATT_MONITOR_DEFAULT 8

define HAL_BATT_VOLT_PIN -1
define HAL_BATT_VOLT_SCALE -1
define HAL_BATT_CURR_PIN -1
define HAL_BATT_CURR_SCALE -1

# Heat
PA15 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80
define HAL_HAVE_IMU_HEATER 1
# default to 45C target temp
define HAL_IMU_TEMP_DEFAULT 45

# CAN bus
PD0  CAN1_RX CAN1
PD1  CAN1_TX CAN1

# 2nd CAN bus. Cannot be used at same time as USB_HS
PB5 CAN2_RX CAN2
PB6 CAN2_TX CAN2

# SPI1 - sensors1
PA5 SPI1_SCK  SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# SPI4 - sensors2
PE2 SPI4_SCK  SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# sensor 
PB9  BMI_CS    CS
PB4  ICM_CS    CS
PB3  BARO1_CS  CS
PC13 BARO2_CS  CS
PB7  RM3100_CS CS
PC14 FRAM_CS   CS

# SPI devices
# SPIDEV BMI270  SPI1 DEVID1  BMI_CS    MODE3  10*MHZ 10*MHZ
SPIDEV ms5611a SPI1 DEVID1  BARO1_CS  MODE3  10*MHZ 10*MHZ
SPIDEV ms5611b SPI1 DEVID2  BARO2_CS  MODE3  10*MHZ 10*MHZ
SPIDEV rm3100  SPI1 DEVID3  RM3100_CS MODE3  2*MHZ  8*MHZ

SPIDEV ICM     SPI4 DEVID1  ICM_CS    MODE3  2*MHZ  8*MHZ
# SPIDEV ms5611b SPI4 DEVID2  BARO2_CS  MODE3  20*MHZ 20*MHZ
SPIDEV ramtron SPI4 DEVID3  FRAM_CS   MODE3  8*MHZ  8*MHZ

# TWO IMU
IMU Invensensev3 SPI:ICM ROTATION_PITCH_180_YAW_270
# IMU BMI270 SPI:BMI270 ROTATION_PITCH_180

define HAL_DEFAULT_INS_FAST_SAMPLE 1

# TWO baros
BARO MS56XX SPI:ms5611a
BARO MS56XX SPI:ms5611b

# One compasses
COMPASS RM3100 SPI:rm3100 false ROTATION_YAW_90

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# LED setup is similar to PixRacer
define HAL_HAVE_PIXRACER_LED
PC1 LED_RED   OUTPUT GPIO(10)
PC0 LED_GREEN OUTPUT GPIO(11)
PC2 LED_BLUE  OUTPUT GPIO(12)

define HAL_GPIO_A_LED_PIN 10
define HAL_GPIO_B_LED_PIN 11
define HAL_GPIO_C_LED_PIN 12

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 0

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# DMA_PRIORITY  ADC* SPI1* TIM*UP*
# DMA_NOSHARE  SPI1* TIM*UP* 
